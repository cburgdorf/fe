name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:

  coverage:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Cache Rust dependencies
      uses: actions/cache@v1.1.2
      with:
        # There's a problem with caching serde, hence we exclude it here
        path: |
          target
          !target/**/*serde*
        key: ${{ runner.OS }}-build-v2-${{ hashFiles('**/Cargo.lock') }}
    - name: coverage with tarpaulin
      run: |
        ./coverage.sh --out Xml
        bash <(curl -s https://codecov.io/bash)

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Install system dependencies
      run: |
        sudo apt-get install -y libboost-all-dev
    - uses: actions/checkout@v2
    - name: Cache Rust dependencies
      uses: actions/cache@v1.1.2
      with:
        # There's a problem with caching serde, hence we exclude it here
        path: |
          target
          !target/**/*serde*
        key: ${{ runner.OS }}-build-v2-${{ hashFiles('**/Cargo.lock') }}
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
        components: rustfmt, clippy
    - name: Lint with rustfmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
    - name: Build
      run: cargo build --all-features --verbose
    - name: Lint with clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --all-targets --all-features -- -D warnings

  test:
    # Build & Test runs on all platforms
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
        # Ignoring Mac until we find a solution to: https://github.com/ethereum/fe/pull/106/checks?check_run_id=1322145918
        # - os: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache Rust dependencies
      uses: actions/cache@v1.1.2
      with:
        # There's a problem with caching serde, hence we exclude it here
        path: |
          target
          !target/**/*serde*
        key: ${{ runner.OS }}-build-v2-${{ hashFiles('**/Cargo.lock') }}
    - name: Install Mac System dependencies
      if: startsWith(matrix.os,'macOS')
      run: |
        brew install boost
    - name: Install Linux dependencies
      if: startsWith(matrix.os,'ubuntu')
      run: |
        sudo apt-get install -y libboost-all-dev
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - name: Build
      run: cargo build --all-features --verbose
    - name: Run tests
      run: cargo test --workspace --features solc-backend --verbose

  wasm-test:
      runs-on: ubuntu-latest
      container: davesque/rust-wasm
      steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Run WASM tests
        run: wasm-pack test --node -- --workspace


  release:
      # Only run this when we push a tag
      if: startsWith(github.ref, 'refs/tags/')
      runs-on: ${{ matrix.os }}
      #needs: test
      strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-latest]

      steps:
        - uses: actions/checkout@v2
        - name: Install Linux dependencies
          if: startsWith(matrix.os,'ubuntu')
          run: |
            sudo apt-get install -y libboost-all-dev
        - name: Install latest nightly
          uses: actions-rs/toolchain@v1
          with:
            profile: minimal
            toolchain: nightly
            override: true
        - name: Build
          run: cargo build --all-features --release && strip target/release/fe && mv target/release/fe target/release/fe_amd64
        - name: Release
          uses: softprops/action-gh-release@v1
          # if: startsWith(github.ref, 'refs/tags/')
          with:
            files: target/release/fe_amd64
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
